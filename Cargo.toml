[package]
name = "dlopen-rs"
version = "0.3.1"
edition = "2021"
authors = ["wzhao <1207410841@qq.com>"]
readme = "README.md"
repository = "https://github.com/weizhiao/dlopen-rs"
keywords = ["dlopen", "so", "elf", "ldso"]
categories = ["no-std", "os", "embedded"]
license = "Apache-2.0"
description = "A library for loading elf dynamic libraries from memory and files"
exclude = [".gitignore", "/test", "/example-dylib"]

[workspace]
members = ["example-dylib"]
resolver = "2"

[dependencies.spin]
version = "0.9.8"
default-features = false
features = ["rwlock"]
optional = true

[dependencies.unwinding]
version = "0.2.3"
default-features = false
features = ["fde-custom", "unwinder"]
optional = true

[dependencies.gimli]
version = "0.30"
default-features = false
features = ["read-core"]
optional = true

[dependencies.hashbrown]
version = '0.14'
default-features = false
features = ['ahash', 'inline-more']

[dependencies.nix]
version = '0.29'
default-features = false
features = ['mman']
optional = true

[dependencies.phf]
version = '0.11'
default-features = false
features = ['macros']

[dependencies.elf]
version = "0.7.4"
default-features = false

[dependencies]
bitflags = "2.6.0"
cfg-if = '1.0'

[features]
default = ["ldso", "libgcc", "tls", "debug", "mmap_impl"]

# allows dynamic libraries to be loaded using system dynamic loaders(ldso)
ldso = ["std", "dep:nix"]
# enable this when you want to use gdb/lldb to debug the loaded dynamic libraries
debug = ["std"]
# enable std
std = ["dep:nix"]
# enable default implementation on devices with mmap
mmap_impl = ["dep:nix", "std"]
# enable default implementation on devices without mmap
no_mmap_impl = []
# enable this when you need to use thread local storage
tls = ["std", "dep:nix"]
# activate specific versions of symbols for dynamic library loading
version = []
# enable this can make loading `faster`, but you'll need to use the `nightly` compiler
nightly = []
# enable this when you want to use the exception handling mechanism provided by dlopen-rs
unwinding = ["dep:unwinding", "dep:spin"]
# enable this when program uses libgcc to handle exceptions
libgcc = ["dep:gimli"]
# enable this when program uses libunwind to handle exceptions
libunwind = ["dep:gimli"]
# see https://github.com/nbdd0121/unwinding/#unwinder
fde-phdr-dl = ["unwinding?/fde-phdr-dl"]
# see https://github.com/nbdd0121/unwinding/#baremetal
fde-static = ["unwinding?/fde-static"]
# see https://github.com/nbdd0121/unwinding/#baremetal
fde-gnu-eh-frame-hdr = ["unwinding?/fde-gnu-eh-frame-hdr"]

[[example]]
name = "from_file"
required-features = ["ldso", "tls", "libgcc"]

[[example]]
name = "from_binary"
required-features = ["ldso", "libgcc", "tls"]

[[example]]
name = "relocate_with"
required-features = ["std", "tls", "libgcc"]

[[example]]
name = "unwinding"
required-features = ["mmap_impl", "tls", "unwinding", "ldso", "fde-phdr-dl"]

[[example]]
name = "mmap_impl"
required-features = ["ldso", "libgcc", "tls"]

[[example]]
name = "dlopen"
required-features = ["ldso", "libgcc", "tls"]
